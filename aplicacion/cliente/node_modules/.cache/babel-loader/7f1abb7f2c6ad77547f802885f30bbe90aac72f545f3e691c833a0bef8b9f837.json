{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\xC1ngel\\\\Desktop\\\\Proyecto\\\\aplicacion\\\\cliente\\\\src\\\\pages\\\\Feedback.jsx\",\n  _s = $RefreshSig$();\n//importamos el css\nimport './styles/Feedback.css';\n// importamos los Estados para poder obtener los valores introducidos por el usuario\nimport { useState } from \"react\";\n// importamos Axios, nos permite hacer sencillas las operaciones como cliente HTTP\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feedback() {\n  _s();\n  // creamos las constantes para obtener los valores de los campos del formulario\n  const [modoCaptacion, setModoCaptacion] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feedback de la visita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedorFeedback\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campos\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"ID Trabajador:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setIdTrabajador(event.target.value),\n          type: \"text\",\n          placeholder: \"Introduce el ID del trabajador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nombreCampo\",\n          children: \"Fecha de la visita:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"campoTexto\",\n          onChange: event => event.target.value,\n          type: \"date\",\n          placeholder: \"Introduce la fecha de la visita\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"nombreCampo\",\n          children: \"Hora de la visita:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"campoTexto\",\n          onChange: event => event.target.value,\n          type: \"time\",\n          placeholder: \"Introduce la hora de la visita\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Feedback, \"8YUdPC2Amb0gsFQXQy90RbPSbyo=\");\n_c = Feedback;\nvar _c;\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"names":["useState","Axios","jsxDEV","_jsxDEV","Feedback","_s","modoCaptacion","setModoCaptacion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","event","setIdTrabajador","target","value","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Ángel/Desktop/Proyecto/aplicacion/cliente/src/pages/Feedback.jsx"],"sourcesContent":["//importamos el css\r\nimport './styles/Feedback.css';\r\n// importamos los Estados para poder obtener los valores introducidos por el usuario\r\nimport { useState } from \"react\";\r\n// importamos Axios, nos permite hacer sencillas las operaciones como cliente HTTP\r\nimport Axios from \"axios\";\r\n\r\nexport default function Feedback() {\r\n  // creamos las constantes para obtener los valores de los campos del formulario\r\n  const [modoCaptacion, setModoCaptacion] = useState(\"\");\r\n\r\n\r\n  return (\r\n    <div className='feedback'>\r\n      <h1>Feedback de la visita</h1>\r\n\r\n      <div className='contenedorFeedback'>\r\n        <div className='campos'>\r\n          <label>ID Trabajador:</label>\r\n          <input\r\n            onChange={(event) => setIdTrabajador(event.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Introduce el ID del trabajador\"\r\n          />\r\n          {/* <label>Modo de captación:</label>\r\n          <select\r\n            onChange={(event) => setModoCaptacion(event.target.value)}\r\n            value={modoCaptacion}\r\n          >\r\n            <option value=\"\">Selecciona un modo de captación</option>\r\n            <option value=\"Captador\">Captador</option>\r\n            <option value=\"Telemarketing\">Telemarketing</option>\r\n            <option value=\"Referido\">Referido</option>\r\n            <option value=\"Propia\"> Captación propia</option>\r\n          </select> */}\r\n\r\n          <label className='nombreCampo'>Fecha de la visita:</label>\r\n          <input className='campoTexto'\r\n            onChange={(event) => (event.target.value)}\r\n            type=\"date\"\r\n            placeholder=\"Introduce la fecha de la visita\"\r\n          />\r\n\r\n          <label className='nombreCampo'>Hora de la visita:</label>\r\n          <input className='campoTexto'\r\n            onChange={(event) => (event.target.value)}\r\n            type=\"time\"\r\n            placeholder=\"Introduce la hora de la visita\"\r\n          />\r\n\r\n          {/* select resultado de la visita */}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAO,uBAAuB;AAC9B;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAGtD,oBACEG,OAAA;IAAKK,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBN,OAAA;MAAAM,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9BV,OAAA;MAAKK,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjCN,OAAA;QAAKK,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBN,OAAA;UAAAM,QAAA,EAAO;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7BV,OAAA;UACEW,QAAQ,EAAGC,KAAK,IAAKC,eAAe,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAE;UACzDC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC;QAAgC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eAaFV,OAAA;UAAOK,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1DV,OAAA;UAAOK,SAAS,EAAC,YAAY;UAC3BM,QAAQ,EAAGC,KAAK,IAAMA,KAAK,CAACE,MAAM,CAACC,KAAO;UAC1CC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC;QAAiC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eAEFV,OAAA;UAAOK,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDV,OAAA;UAAOK,SAAS,EAAC,YAAY;UAC3BM,QAAQ,EAAGC,KAAK,IAAMA,KAAK,CAACE,MAAM,CAACC,KAAO;UAC1CC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC;QAAgC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACR,EAAA,CAjDuBD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}